{"version":3,"file":"readXmlFile.js","sourceRoot":"","sources":["../src/readXmlFile.ts"],"names":[],"mappings":"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","sourcesContent":["import * as txml from 'txml/dist/txml.mjs';\r\nimport type { XmlNode } from './types';\r\nimport type JSZip from 'jszip';\r\n\r\nlet cust_attr_order = 0;\r\n\r\ninterface TXMLNode {\r\n  tagName?: string;\r\n  attributes?: Record<string, string>;\r\n  children?: (TXMLNode | string)[];\r\n}\r\n\r\nexport function simplifyLostLess(\r\n  children: (TXMLNode | string)[], \r\n  parentAttributes: Record<string, string> = {}\r\n): XmlNode | string {\r\n  const out: XmlNode = {};\r\n  if (!children.length) return out;\r\n\r\n  if (children.length === 1 && typeof children[0] === 'string') {\r\n    return Object.keys(parentAttributes).length ? {\r\n      attrs: { order: cust_attr_order++, ...parentAttributes },\r\n      value: children[0],\r\n    } : children[0];\r\n  }\r\n\r\n  for (const child of children) {\r\n    if (typeof child !== 'object' || !child.tagName) continue;\r\n    if (child.tagName === '?xml') continue;\r\n\r\n    if (!out[child.tagName]) out[child.tagName] = [];\r\n\r\n    const kids = simplifyLostLess(child.children || [], child.attributes || {});\r\n    \r\n    if (typeof kids === 'object' && kids !== null) {\r\n      if (!kids.attrs) {\r\n        kids.attrs = { order: cust_attr_order++ };\r\n      } else {\r\n        kids.attrs.order = cust_attr_order++;\r\n      }\r\n    }\r\n    \r\n    if (Object.keys(child.attributes || {}).length) {\r\n      if (typeof kids === 'object' && kids !== null) {\r\n        kids.attrs = { ...kids.attrs, ...child.attributes };\r\n      }\r\n    }\r\n    \r\n    if (Array.isArray(out[child.tagName])) {\r\n      out[child.tagName].push(kids);\r\n    }\r\n  }\r\n\r\n  for (const childKey in out) {\r\n    if (Array.isArray(out[childKey]) && out[childKey].length === 1) {\r\n      out[childKey] = out[childKey][0];\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\nexport async function readXmlFile(zip: JSZip, filename: string): Promise<XmlNode | null> {\r\n  try {\r\n    const file = zip.file(filename);\r\n    if (!file) {\r\n      return null;\r\n    }\r\n    \r\n    const data = await file.async('string');\r\n    const parsed = txml.parse(data) as TXMLNode[];\r\n    return simplifyLostLess(parsed) as XmlNode;\r\n  } catch (error) {\r\n    console.warn(`Failed to read XML file: ${filename}`, error);\r\n    return null;\r\n  }\r\n}"]}