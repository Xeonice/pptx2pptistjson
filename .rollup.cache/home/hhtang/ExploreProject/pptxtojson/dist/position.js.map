{"version":3,"file":"position.js","sourceRoot":"","sources":["../src/position.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAGhD,MAAM,UAAU,WAAW,CACzB,WAA4B,EAC5B,iBAAkC,EAClC,iBAAkC;IAElC,IAAI,GAAQ,CAAC;IAEb,IAAI,WAAW,EAAE,CAAC;QAChB,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;SAAM,IAAI,iBAAiB,EAAE,CAAC;QAC7B,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;SAAM,IAAI,iBAAiB,EAAE,CAAC;QAC7B,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,CAAC,GAAG,EAAE,CAAC;QACT,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;IAC7B,CAAC;IAED,OAAO;QACL,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,iBAAiB;QAC3C,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,iBAAiB;KAC7C,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,OAAO,CACrB,WAA4B,EAC5B,iBAAkC,EAClC,iBAAkC;IAElC,IAAI,GAAQ,CAAC;IAEb,IAAI,WAAW,EAAE,CAAC;QAChB,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;SAAM,IAAI,iBAAiB,EAAE,CAAC;QAC7B,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;SAAM,IAAI,iBAAiB,EAAE,CAAC;QAC7B,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,CAAC,GAAG,EAAE,CAAC;QACT,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;IACjC,CAAC;IAED,OAAO;QACL,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,iBAAiB;QAC9C,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,iBAAiB;KAChD,CAAC;AACJ,CAAC","sourcesContent":["import { RATIO_EMUs_Points } from './constants';\r\nimport type { Position, Size, XmlNode } from './types';\r\n\r\nexport function getPosition(\r\n  slideSpNode?: XmlNode | null, \r\n  slideLayoutSpNode?: XmlNode | null, \r\n  slideMasterSpNode?: XmlNode | null\r\n): Position {\r\n  let off: any;\r\n\r\n  if (slideSpNode) {\r\n    off = slideSpNode['a:off']?.['attrs'];\r\n  } else if (slideLayoutSpNode) {\r\n    off = slideLayoutSpNode['a:off']?.['attrs'];\r\n  } else if (slideMasterSpNode) {\r\n    off = slideMasterSpNode['a:off']?.['attrs'];\r\n  }\r\n\r\n  if (!off) {\r\n    return { top: 0, left: 0 };\r\n  }\r\n\r\n  return {\r\n    top: parseInt(off['y']) * RATIO_EMUs_Points,\r\n    left: parseInt(off['x']) * RATIO_EMUs_Points,\r\n  };\r\n}\r\n\r\nexport function getSize(\r\n  slideSpNode?: XmlNode | null, \r\n  slideLayoutSpNode?: XmlNode | null, \r\n  slideMasterSpNode?: XmlNode | null\r\n): Size {\r\n  let ext: any;\r\n\r\n  if (slideSpNode) {\r\n    ext = slideSpNode['a:ext']?.['attrs'];\r\n  } else if (slideLayoutSpNode) {\r\n    ext = slideLayoutSpNode['a:ext']?.['attrs'];\r\n  } else if (slideMasterSpNode) {\r\n    ext = slideMasterSpNode['a:ext']?.['attrs'];\r\n  }\r\n\r\n  if (!ext) {\r\n    return { width: 0, height: 0 };\r\n  }\r\n\r\n  return {\r\n    width: parseInt(ext['cx']) * RATIO_EMUs_Points,\r\n    height: parseInt(ext['cy']) * RATIO_EMUs_Points,\r\n  };\r\n}"]}