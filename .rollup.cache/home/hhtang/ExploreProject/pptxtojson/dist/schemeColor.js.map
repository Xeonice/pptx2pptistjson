{"version":3,"file":"schemeColor.js","sourceRoot":"","sources":["../src/schemeColor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAG5C,MAAM,UAAU,uBAAuB,CACrC,SAAiB,EACjB,OAA0B,EAC1B,MAAY,EACZ,KAAc;IAEd,IAAI,KAAyB,CAAC;IAC9B,IAAI,oBAAyB,CAAC;IAE9B,IAAI,MAAM,EAAE,CAAC;QACX,oBAAoB,GAAG,MAAM,CAAC;IAChC,CAAC;SAAM,CAAC;QACN,IAAI,YAAY,GAAG,iBAAiB,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,sBAAsB,EAAE,OAAO,CAAC,CAAC,CAAC;QACtH,IAAI,YAAY,EAAE,CAAC;YACjB,oBAAoB,GAAG,YAAY,CAAC;QACtC,CAAC;aAAM,CAAC;YACN,YAAY,GAAG,iBAAiB,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,sBAAsB,EAAE,OAAO,CAAC,CAAC,CAAC;YAC9H,IAAI,YAAY,EAAE,CAAC;gBACjB,oBAAoB,GAAG,YAAY,CAAC;YACtC,CAAC;iBAAM,CAAC;gBACN,oBAAoB,GAAG,iBAAiB,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;YAC7G,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACxC,IAAI,WAAW,KAAK,OAAO,IAAI,KAAK,EAAE,CAAC;QACrC,KAAK,GAAG,KAAK,CAAC;IAChB,CAAC;SAAM,CAAC;QACN,IAAI,oBAAoB,EAAE,CAAC;YACzB,QAAQ,WAAW,EAAE,CAAC;gBACpB,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK,CAAC;gBACX,KAAK,KAAK;oBACR,SAAS,GAAG,IAAI,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;oBACrD,MAAM;gBACR;oBACE,MAAM;YACV,CAAC;QACH,CAAC;aAAM,CAAC;YACN,QAAQ,SAAS,EAAE,CAAC;gBAClB,KAAK,KAAK;oBACR,SAAS,GAAG,OAAO,CAAC;oBACpB,MAAM;gBACR,KAAK,KAAK;oBACR,SAAS,GAAG,OAAO,CAAC;oBACpB,MAAM;gBACR,KAAK,KAAK;oBACR,SAAS,GAAG,OAAO,CAAC;oBACpB,MAAM;gBACR,KAAK,KAAK;oBACR,SAAS,GAAG,OAAO,CAAC;oBACpB,MAAM;gBACR;oBACE,MAAM;YACV,CAAC;QACH,CAAC;QAED,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC;QAClH,KAAK,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,IAAI,OAAO,EAAE,CAAC;YACtB,KAAK,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QACvE,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { getTextByPathList } from './utils';\r\nimport type { ProcessingContext } from './types';\r\n\r\nexport function getSchemeColorFromTheme(\r\n  schemeClr: string, \r\n  warpObj: ProcessingContext, \r\n  clrMap?: any, \r\n  phClr?: string\r\n): string | undefined {\r\n  let color: string | undefined;\r\n  let slideLayoutClrOvride: any;\r\n  \r\n  if (clrMap) {\r\n    slideLayoutClrOvride = clrMap;\r\n  } else {\r\n    let sldClrMapOvr = getTextByPathList(warpObj.slideContent, ['p:sld', 'p:clrMapOvr', 'a:overrideClrMapping', 'attrs']);\r\n    if (sldClrMapOvr) {\r\n      slideLayoutClrOvride = sldClrMapOvr;\r\n    } else {\r\n      sldClrMapOvr = getTextByPathList(warpObj.slideLayoutContent, ['p:sldLayout', 'p:clrMapOvr', 'a:overrideClrMapping', 'attrs']);\r\n      if (sldClrMapOvr) {\r\n        slideLayoutClrOvride = sldClrMapOvr;\r\n      } else {\r\n        slideLayoutClrOvride = getTextByPathList(warpObj.slideMasterContent, ['p:sldMaster', 'p:clrMap', 'attrs']);\r\n      }\r\n    }\r\n  }\r\n  \r\n  const schmClrName = schemeClr.substr(2);\r\n  if (schmClrName === 'phClr' && phClr) {\r\n    color = phClr;\r\n  } else {\r\n    if (slideLayoutClrOvride) {\r\n      switch (schmClrName) {\r\n        case 'tx1':\r\n        case 'tx2':\r\n        case 'bg1':\r\n        case 'bg2':\r\n          schemeClr = 'a:' + slideLayoutClrOvride[schmClrName];\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      switch (schemeClr) {\r\n        case 'tx1':\r\n          schemeClr = 'a:dk1';\r\n          break;\r\n        case 'tx2':\r\n          schemeClr = 'a:dk2';\r\n          break;\r\n        case 'bg1':\r\n          schemeClr = 'a:lt1';\r\n          break;\r\n        case 'bg2':\r\n          schemeClr = 'a:lt2';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    \r\n    const refNode = getTextByPathList(warpObj.themeContent, ['a:theme', 'a:themeElements', 'a:clrScheme', schemeClr]);\r\n    color = getTextByPathList(refNode, ['a:srgbClr', 'attrs', 'val']);\r\n    if (!color && refNode) {\r\n      color = getTextByPathList(refNode, ['a:sysClr', 'attrs', 'lastClr']);\r\n    }\r\n  }\r\n  \r\n  return color;\r\n}"]}