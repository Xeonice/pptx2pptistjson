{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nexport function base64ArrayBuffer(arrayBuffer: ArrayBuffer): string {\r\n  const encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n  const bytes = new Uint8Array(arrayBuffer);\r\n  const byteLength = bytes.byteLength;\r\n  const byteRemainder = byteLength % 3;\r\n  const mainLength = byteLength - byteRemainder;\r\n  \r\n  let base64 = '';\r\n  let a: number, b: number, c: number, d: number;\r\n  let chunk: number;\r\n\r\n  for (let i = 0; i < mainLength; i = i + 3) {\r\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\r\n    a = (chunk & 16515072) >> 18;\r\n    b = (chunk & 258048) >> 12;\r\n    c = (chunk & 4032) >> 6;\r\n    d = chunk & 63;\r\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\r\n  }\r\n\r\n  if (byteRemainder === 1) {\r\n    chunk = bytes[mainLength];\r\n    a = (chunk & 252) >> 2;\r\n    b = (chunk & 3) << 4;\r\n    base64 += encodings[a] + encodings[b] + '==';\r\n  } else if (byteRemainder === 2) {\r\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\r\n    a = (chunk & 64512) >> 10;\r\n    b = (chunk & 1008) >> 4;\r\n    c = (chunk & 15) << 2;\r\n    base64 += encodings[a] + encodings[b] + encodings[c] + '=';\r\n  }\r\n\r\n  return base64;\r\n}\r\n\r\nexport function extractFileExtension(filename: string): string {\r\n  return filename.substr((~-filename.lastIndexOf('.') >>> 0) + 2);\r\n}\r\n\r\nexport function eachElement<T>(\r\n  node: T | T[] | undefined | null, \r\n  func: (item: T, index: number) => string\r\n): string {\r\n  if (!node) return '';\r\n\r\n  let result = '';\r\n  if (Array.isArray(node)) {\r\n    for (let i = 0; i < node.length; i++) {\r\n      result += func(node[i], i);\r\n    }\r\n  } else {\r\n    result += func(node, 0);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function getTextByPathList(node: any, path: string[]): any {\r\n  if (!node) return node;\r\n\r\n  let current = node;\r\n  for (const key of path) {\r\n    current = current[key];\r\n    if (!current) return current;\r\n  }\r\n\r\n  return current;\r\n}\r\n\r\nexport function angleToDegrees(angle: string | number | undefined): number {\r\n  if (!angle) return 0;\r\n  const numAngle = typeof angle === 'string' ? parseFloat(angle) : angle;\r\n  return Math.round(numAngle / 60000);\r\n}\r\n\r\nexport function escapeHtml(text: string): string {\r\n  const map: Record<string, string> = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    \"'\": '&#039;',\r\n  };\r\n  return text.replace(/[&<>\"']/g, (m) => map[m]);\r\n}\r\n\r\nexport function getMimeType(imgFileExt: string): string {\r\n  switch (imgFileExt.toLowerCase()) {\r\n    case 'jpg':\r\n    case 'jpeg':\r\n      return 'image/jpeg';\r\n    case 'png':\r\n      return 'image/png';\r\n    case 'gif':\r\n      return 'image/gif';\r\n    case 'emf':\r\n      return 'image/x-emf';\r\n    case 'wmf':\r\n      return 'image/x-wmf';\r\n    case 'svg':\r\n      return 'image/svg+xml';\r\n    case 'mp4':\r\n      return 'video/mp4';\r\n    case 'webm':\r\n      return 'video/webm';\r\n    case 'ogg':\r\n      return 'video/ogg';\r\n    case 'avi':\r\n      return 'video/avi';\r\n    case 'mpg':\r\n      return 'video/mpg';\r\n    case 'wmv':\r\n      return 'video/wmv';\r\n    case 'mp3':\r\n      return 'audio/mpeg';\r\n    case 'wav':\r\n      return 'audio/wav';\r\n    case 'tif':\r\n      return 'image/tiff';\r\n    case 'tiff':\r\n      return 'image/tiff';\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function isVideoLink(vdoFile: string): boolean {\r\n  const urlRegex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\r\n  return urlRegex.test(vdoFile);\r\n}\r\n\r\nexport function toHex(n: number): string {\r\n  let hex = n.toString(16);\r\n  while (hex.length < 2) {\r\n    hex = '0' + hex;\r\n  }\r\n  return hex;\r\n}\r\n\r\nexport function hasValidText(htmlString: string): boolean {\r\n  if (typeof DOMParser === 'undefined') {\r\n    // Server-side fallback\r\n    const text = htmlString.replace(/<[^>]+>/g, '').replace(/\\s+/g, ' ');\r\n    return text.trim() !== '';\r\n  }\r\n\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(htmlString, 'text/html');\r\n  const text = doc.body.textContent || doc.body.innerText || '';\r\n  return text.trim() !== '';\r\n}"]}