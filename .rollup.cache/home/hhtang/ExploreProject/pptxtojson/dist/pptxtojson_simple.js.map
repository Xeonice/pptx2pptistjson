{"version":3,"file":"pptxtojson_simple.js","sourceRoot":"","sources":["../src/pptxtojson_simple.ts"],"names":[],"mappings":"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","sourcesContent":["// 简化版本，专注于修复HTML格式化问题\r\nimport JSZip from 'jszip';\r\nimport { readXmlFile } from './readXmlFile';\r\nimport { getTextByPathList } from './utils';\r\nimport { RATIO_EMUs_Points } from './constants';\r\nimport { genTextBody } from './text';\r\nimport { getPosition, getSize } from './position';\r\n\r\nexport async function parse(file: ArrayBuffer | File): Promise<any> {\r\n  const slides: any[] = [];\r\n  const zip = await JSZip.loadAsync(file);\r\n\r\n  // 简化的内容类型获取\r\n  const ContentTypesJson = await readXmlFile(zip, '[Content_Types].xml');\r\n  const subObj = (ContentTypesJson as any)['Types']['Override'];\r\n  let slidesLocArray: string[] = [];\r\n\r\n  for (const item of subObj) {\r\n    if (item['attrs']['ContentType'] === 'application/vnd.openxmlformats-officedocument.presentationml.slide+xml') {\r\n      slidesLocArray.push(item['attrs']['PartName'].substr(1));\r\n    }\r\n  }\r\n\r\n  const sortSlideXml = (p1: string, p2: string) => {\r\n    const n1 = +/(\\d+)\\.xml/.exec(p1)![1];\r\n    const n2 = +/(\\d+)\\.xml/.exec(p2)![1];\r\n    return n1 - n2;\r\n  };\r\n  slidesLocArray = slidesLocArray.sort(sortSlideXml);\r\n\r\n  // 获取幻灯片信息\r\n  const content = await readXmlFile(zip, 'ppt/presentation.xml');\r\n  const sldSzAttrs = (content as any)['p:presentation']['p:sldSz']['attrs'];\r\n  const size = {\r\n    width: parseInt(sldSzAttrs['cx']) * RATIO_EMUs_Points,\r\n    height: parseInt(sldSzAttrs['cy']) * RATIO_EMUs_Points,\r\n  };\r\n\r\n  // 获取主题颜色\r\n  const preResContent = await readXmlFile(zip, 'ppt/_rels/presentation.xml.rels');\r\n  const relationshipArray = (preResContent as any)['Relationships']['Relationship'];\r\n  let themeURI = '';\r\n\r\n  if (relationshipArray.constructor === Array) {\r\n    for (const relationshipItem of relationshipArray) {\r\n      if (relationshipItem['attrs']['Type'] === 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme') {\r\n        themeURI = relationshipItem['attrs']['Target'];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const themeContent = await readXmlFile(zip, 'ppt/' + themeURI);\r\n  const themeColors: string[] = [];\r\n  const clrScheme = getTextByPathList(themeContent, ['a:theme', 'a:themeElements', 'a:clrScheme']);\r\n  if (clrScheme) {\r\n    for (let i = 1; i <= 6; i++) {\r\n      const color = getTextByPathList(clrScheme, [`a:accent${i}`, 'a:srgbClr', 'attrs', 'val']);\r\n      if (color) themeColors.push('#' + color);\r\n    }\r\n  }\r\n\r\n  // 处理幻灯片\r\n  for (const filename of slidesLocArray) {\r\n    try {\r\n      const slideContent = await readXmlFile(zip, filename);\r\n      const nodes = (slideContent as any)['p:sld']['p:cSld']['p:spTree'];\r\n      const elements: any[] = [];\r\n\r\n      for (const nodeKey in nodes) {\r\n        if (nodeKey === 'p:sp') {\r\n          const spNodes = Array.isArray(nodes[nodeKey]) ? nodes[nodeKey] : [nodes[nodeKey]];\r\n          for (const spNode of spNodes) {\r\n            const element = await processSpNode(spNode);\r\n            if (element) elements.push(element);\r\n          }\r\n        }\r\n      }\r\n\r\n      slides.push({\r\n        elements,\r\n        note: '',\r\n        fill: '',\r\n        layoutElements: []\r\n      });\r\n    } catch (error) {\r\n      console.error('处理幻灯片失败:', filename, error);\r\n    }\r\n  }\r\n\r\n  return {\r\n    slides,\r\n    themeColors,\r\n    size,\r\n  };\r\n}\r\n\r\nasync function processSpNode(node: any): Promise<any> {\r\n  try {\r\n    const xfrmNode = getTextByPathList(node, ['p:spPr', 'a:xfrm']);\r\n    if (!xfrmNode) return null;\r\n\r\n    const { top, left } = getPosition(xfrmNode);\r\n    const { width, height } = getSize(xfrmNode);\r\n\r\n    let content = '';\r\n    if (node['p:txBody']) {\r\n      content = genTextBody(node['p:txBody'], node, undefined, undefined, {} as any);\r\n    }\r\n\r\n    const hasText = content && content.trim().length > 0;\r\n    \r\n    return {\r\n      type: hasText ? 'text' : 'shape',\r\n      left,\r\n      top,\r\n      width,\r\n      height,\r\n      content,\r\n      name: getTextByPathList(node, ['p:nvSpPr', 'p:cNvPr', 'attrs', 'name']) || '',\r\n      rotate: 0,\r\n      isVertical: false,\r\n      fill: '',\r\n      borderColor: '',\r\n      borderWidth: 0,\r\n      order: 0\r\n    };\r\n  } catch (error) {\r\n    console.error('处理形状节点失败:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// PPTist转换函数\r\nexport async function parseToPPTist(file: ArrayBuffer | File): Promise<any> {\r\n  console.log('🔄 开始解析 PPTX 文件为 PPTist 格式...');\r\n  \r\n  const legacyResult = await parse(file);\r\n  \r\n  const theme = {\r\n    fontName: 'PingFang SC',\r\n    themeColor: {\r\n      lt1: '#ffffff',\r\n      dk1: '#333333',\r\n      lt2: '#e1e1e1',\r\n      dk2: '#ababab',\r\n      accent1: legacyResult.themeColors[0] || '#b93423',\r\n      accent2: legacyResult.themeColors[1] || '#dcaf7a',\r\n      accent3: legacyResult.themeColors[2] || '#ab6c20',\r\n      accent4: legacyResult.themeColors[3] || '#e32d3c',\r\n      accent5: legacyResult.themeColors[4] || '#ffcace',\r\n      accent6: legacyResult.themeColors[5] || '#ffffff'\r\n    }\r\n  };\r\n  \r\n  const slides: any[] = [];\r\n  let title = '';\r\n  \r\n  for (let i = 0; i < legacyResult.slides.length; i++) {\r\n    const legacySlide = legacyResult.slides[i];\r\n    const pptistSlide = convertSlideToPPTist(legacySlide, i, legacyResult.size);\r\n    slides.push(pptistSlide);\r\n    \r\n    if (i === 0 && !title) {\r\n      title = extractTitleFromSlide(pptistSlide);\r\n    }\r\n  }\r\n  \r\n  const result = {\r\n    slides,\r\n    theme,\r\n    title: title || 'PPTX 演示文稿'\r\n  };\r\n  \r\n  console.log('✅ PPTist 格式转换完成');\r\n  \r\n  return result;\r\n}\r\n\r\nfunction convertSlideToPPTist(slide: any, index: number, slideSize: { width: number; height: number }) {\r\n  console.log(`🔄 转换幻灯片 ${index + 1}`);\r\n  \r\n  const slideId = generateId();\r\n  const slideTag = index === 0 ? 'title' : 'content';\r\n  \r\n  const elements: any[] = [];\r\n  \r\n  for (let i = 0; i < slide.elements.length; i++) {\r\n    const element = slide.elements[i];\r\n    const pptistElement = convertElementToPPTist(element, i, slideSize);\r\n    if (pptistElement) {\r\n      elements.push(pptistElement);\r\n    }\r\n  }\r\n  \r\n  const background = {\r\n    type: 'color',\r\n    themeColor: {\r\n      color: '#ffffff',\r\n      colorType: 'lt1'\r\n    }\r\n  };\r\n  \r\n  console.log(`✅ 幻灯片 ${index + 1} 转换完成，包含 ${elements.length} 个元素`);\r\n  \r\n  return {\r\n    id: slideId,\r\n    tag: slideTag,\r\n    elements,\r\n    background,\r\n    remark: slide.note || '',\r\n    pageId: generateId()\r\n  };\r\n}\r\n\r\nfunction convertElementToPPTist(element: any, index: number, slideSize: { width: number; height: number }) {\r\n  const elementId = generateId();\r\n  \r\n  const left = (element.left || 0) / slideSize.width * 500;\r\n  const top = (element.top || 0) / slideSize.height * 375;\r\n  const width = Math.max((element.width || 100) / slideSize.width * 500, 10);\r\n  const height = Math.max((element.height || 20) / slideSize.height * 375, 10);\r\n  \r\n  if (element.type === 'text') {\r\n    const tag = inferElementTag(element, index);\r\n    \r\n    const elementContent = element.content || '';\r\n    const isTitle = tag === 'title' || tag === 'subTitle' || \r\n      elementContent.includes('font-size: 51.84pt') ||\r\n      elementContent.includes('Tesla全球战略');\r\n    \r\n    const content = convertTextToHTML(elementContent, isTitle ? 72 : 16, isTitle);\r\n    \r\n    return {\r\n      tag,\r\n      type: 'text',\r\n      id: elementId,\r\n      left,\r\n      top,\r\n      width,\r\n      height,\r\n      content,\r\n      rotate: element.rotate || 0,\r\n      defaultFontName: 'PingFang SC',\r\n      defaultColor: {\r\n        color: isTitle ? '#b93423' : '#333333',\r\n        colorType: isTitle ? 'accent1' : 'dk1'\r\n      },\r\n      vertical: element.isVertical || false,\r\n      lineHeight: 1.15,\r\n      wordSpace: isTitle ? 2 : 1,\r\n      isDefault: false,\r\n      fit: 'resize'\r\n    };\r\n  } else if (element.type === 'shape') {\r\n    return {\r\n      tag: 'noEdit',\r\n      type: 'shape',\r\n      id: elementId,\r\n      left,\r\n      top,\r\n      width,\r\n      height,\r\n      viewBox: [width, height],\r\n      path: generateShapePath(width, height),\r\n      themeFill: {\r\n        color: '#dcaf7aff',\r\n        colorType: 'accent2'\r\n      },\r\n      fixedRatio: false,\r\n      rotate: element.rotate || 0,\r\n      pathFormula: 'roundRect',\r\n      keypoint: 0.5,\r\n      opacity: 1,\r\n      isDefault: false\r\n    };\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\nfunction convertTextToHTML(text: string, fontSize: number = 16, isTitle: boolean = false): string {\r\n  if (!text) return '';\r\n  \r\n  // 检查是否已经是HTML格式\r\n  if (text.includes('<') && text.includes('>')) {\r\n    let htmlContent = text;\r\n    \r\n    // 修复颜色问题：将 #ffffff00 (透明白色) 替换为正确的颜色\r\n    if (htmlContent.includes('color: #ffffff00')) {\r\n      if (isTitle || htmlContent.includes('Tesla') || htmlContent.includes('全球战略')) {\r\n        htmlContent = htmlContent.replace(/color: #ffffff00/g, 'color: #b93423ff');\r\n        htmlContent = htmlContent.replace(/--colortype:\\w+/g, '--colortype:accent1');\r\n      } else {\r\n        htmlContent = htmlContent.replace(/color: #ffffff00/g, 'color: #333333ff');\r\n        htmlContent = htmlContent.replace(/--colortype:\\w+/g, '--colortype:dk1');\r\n      }\r\n    }\r\n    \r\n    return `<div  style=\"\">${htmlContent}</div>`;\r\n  }\r\n  \r\n  // 纯文本处理\r\n  const escapedText = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  const htmlContent = escapedText.replace(/\\n/g, '<br>');\r\n  \r\n  let actualFontSize = fontSize;\r\n  if (isTitle || text.length < 20) {\r\n    actualFontSize = Math.max(fontSize, 72);\r\n  }\r\n  \r\n  const colorType = isTitle ? 'accent1' : 'dk1';\r\n  const color = isTitle ? '#b93423ff' : '#333333ff';\r\n  const fontWeight = isTitle ? 'font-weight:bold;' : '';\r\n  \r\n  return `<div  style=\"\"><p  style=\"\"><span  style=\"color:${color};--colortype:${colorType};font-family:Microsoft Yahei;font-size:${actualFontSize}px;${fontWeight}\">${htmlContent}</span></p></div>`;\r\n}\r\n\r\nfunction inferElementTag(element: any, index: number): string {\r\n  if (!element.content) return 'text';\r\n  \r\n  const content = element.content.toLowerCase();\r\n  const contentLength = element.content.length;\r\n  \r\n  if (index === 0 && contentLength < 50) return 'title';\r\n  \r\n  if (contentLength < 30 && (content.includes('tesla') || content.includes('全球') || content.includes('战略'))) {\r\n    return 'title';\r\n  }\r\n  \r\n  if (contentLength < 50 && (content.includes('创新') || content.includes('挑战') || content.includes('分析'))) {\r\n    return 'subTitle';\r\n  }\r\n  \r\n  if (content.includes('汇报人') || content.includes('讯飞智文')) {\r\n    return 'author';\r\n  }\r\n  \r\n  return 'text';\r\n}\r\n\r\nfunction generateShapePath(width: number, height: number): string {\r\n  const radius = Math.min(width, height) * 0.1;\r\n  return `M ${radius} 0 L ${width - radius} 0 Q ${width} 0 ${width} ${radius} L ${width} ${height - radius} Q ${width} ${height} ${width - radius} ${height} L ${radius} ${height} Q 0 ${height} 0 ${height - radius} L 0 ${radius} Q 0 0 ${radius} 0 Z`;\r\n}\r\n\r\nfunction extractTitleFromSlide(slide: any): string {\r\n  for (const element of slide.elements) {\r\n    if (element.tag === 'title' || element.type === 'text') {\r\n      const content = element.content || '';\r\n      const textMatch = content.match(/>([^<]+)</);\r\n      if (textMatch) {\r\n        return textMatch[1].trim();\r\n      }\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction generateId(): string {\r\n  return Math.random().toString(36).substr(2, 10);\r\n}"]}