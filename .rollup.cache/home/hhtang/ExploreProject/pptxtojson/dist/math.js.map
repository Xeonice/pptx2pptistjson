{"version":3,"file":"math.js","sourceRoot":"","sources":["../src/math.ts"],"names":[],"mappings":"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","sourcesContent":["import { getTextByPathList } from './utils';\r\nimport type { XmlNode } from './types';\r\n\r\nexport function findOMath(obj: any): any[] {\r\n  let results: any[] = [];\r\n  if (typeof obj !== 'object' || obj === null) return results;\r\n  if (obj['m:oMath']) results = results.concat(obj['m:oMath']);\r\n  \r\n  Object.values(obj).forEach(value => {\r\n    if (Array.isArray(value) || typeof value === 'object') {\r\n      results = results.concat(findOMath(value));\r\n    }\r\n  });\r\n  \r\n  return results;\r\n}\r\n\r\nexport function parseFraction(fraction: XmlNode): string {\r\n  const numerator = parseOMath(fraction['m:num']);\r\n  const denominator = parseOMath(fraction['m:den']);\r\n  return `\\\\frac{${numerator}}{${denominator}}`;\r\n}\r\n\r\nexport function parseSuperscript(superscript: XmlNode): string {\r\n  const base = parseOMath(superscript['m:e']);\r\n  const sup = parseOMath(superscript['m:sup']);\r\n  return `${base}^{${sup}}`;\r\n}\r\n\r\nexport function parseSubscript(subscript: XmlNode): string {\r\n  const base = parseOMath(subscript['m:e']);\r\n  const sub = parseOMath(subscript['m:sub']);\r\n  return `${base}_{${sub}}`;\r\n}\r\n\r\nexport function parseRadical(radical: XmlNode): string {\r\n  const degree = parseOMath(radical['m:deg']);\r\n  const expression = parseOMath(radical['m:e']);\r\n  return degree ? `\\\\sqrt[${degree}]{${expression}}` : `\\\\sqrt{${expression}}`;\r\n}\r\n\r\nexport function parseMatrix(matrix: XmlNode): string {\r\n  const rows = matrix['m:mr'];\r\n  if (!Array.isArray(rows)) return '';\r\n  \r\n  const matrixRows = rows.map((row: XmlNode) => {\r\n    if (!row['m:e'] || !Array.isArray(row['m:e'])) return '';\r\n    return row['m:e'].map((element: XmlNode) => parseOMath(element)).join(' & ');\r\n  });\r\n  \r\n  return `\\\\begin{matrix} ${matrixRows.join(' \\\\\\\\ ')} \\\\end{matrix}`;\r\n}\r\n\r\nexport function parseNary(nary: XmlNode): string {\r\n  const op = getTextByPathList(nary, ['m:naryPr', 'm:chr', 'attrs', 'm:val']) || '∫';\r\n  const sub = parseOMath(nary['m:sub']);\r\n  const sup = parseOMath(nary['m:sup']);\r\n  const e = parseOMath(nary['m:e']);\r\n  return `${op}_{${sub}}^{${sup}}{${e}}`;\r\n}\r\n\r\nexport function parseLimit(limit: XmlNode, type: 'low' | 'upp'): string {\r\n  const base = parseOMath(limit['m:e']);\r\n  const lim = parseOMath(limit['m:lim']);\r\n  return type === 'low' ? `${base}_{${lim}}` : `${base}^{${lim}}`;\r\n}\r\n\r\nexport function parseDelimiter(delimiter: XmlNode): string {\r\n  let left = getTextByPathList(delimiter, ['m:dPr', 'm:begChr', 'attrs', 'm:val']);\r\n  let right = getTextByPathList(delimiter, ['m:dPr', 'm:endChr', 'attrs', 'm:val']);\r\n  \r\n  if (!left && !right) {\r\n    left = '(';\r\n    right = ')';\r\n  }\r\n  \r\n  if (left && right) {\r\n    left = `\\\\left${left}`;\r\n    right = `\\\\right${right}`;\r\n  }\r\n  \r\n  const e = parseOMath(delimiter['m:e']);\r\n  return `${left}${e}${right}`;\r\n}\r\n\r\nexport function parseFunction(func: XmlNode): string {\r\n  const name = parseOMath(func['m:fName']);\r\n  const arg = parseOMath(func['m:e']);\r\n  return `\\\\${name}{${arg}}`;\r\n}\r\n\r\nexport function parseGroupChr(groupChr: XmlNode): string {\r\n  const chr = getTextByPathList(groupChr, ['m:groupChrPr', 'm:chr', 'attrs', 'm:val']) || '';\r\n  const e = parseOMath(groupChr['m:e']);\r\n  return `${chr}${e}${chr}`;\r\n}\r\n\r\nexport function parseEqArr(eqArr: XmlNode): string {\r\n  if (!eqArr['m:e'] || !Array.isArray(eqArr['m:e'])) return '';\r\n  const equations = eqArr['m:e'].map((eq: XmlNode) => parseOMath(eq)).join(' \\\\\\\\ ');\r\n  return `\\\\begin{cases} ${equations} \\\\end{cases}`;\r\n}\r\n\r\nexport function parseBar(bar: XmlNode): string {\r\n  const e = parseOMath(bar['m:e']);\r\n  const pos = getTextByPathList(bar, ['m:barPr', 'm:pos', 'attrs', 'm:val']);\r\n  return pos === 'top' ? `\\\\overline{${e}}` : `\\\\underline{${e}}`;\r\n}\r\n\r\nexport function parseAccent(accent: XmlNode): string {\r\n  const chr = getTextByPathList(accent, ['m:accPr', 'm:chr', 'attrs', 'm:val']) || '^';\r\n  const e = parseOMath(accent['m:e']);\r\n  \r\n  switch (chr) {\r\n    case '\\u0301':\r\n      return `\\\\acute{${e}}`;\r\n    case '\\u0300':\r\n      return `\\\\grave{${e}}`;\r\n    case '\\u0302':\r\n      return `\\\\hat{${e}}`;\r\n    case '\\u0303':\r\n      return `\\\\tilde{${e}}`;\r\n    case '\\u0304':\r\n      return `\\\\bar{${e}}`;\r\n    case '\\u0306':\r\n      return `\\\\breve{${e}}`;\r\n    case '\\u0307':\r\n      return `\\\\dot{${e}}`;\r\n    case '\\u0308':\r\n      return `\\\\ddot{${e}}`;\r\n    case '\\u030A':\r\n      return `\\\\mathring{${e}}`;\r\n    case '\\u030B':\r\n      return `\\\\H{${e}}`;\r\n    case '\\u030C':\r\n      return `\\\\check{${e}}`;\r\n    case '\\u0327':\r\n      return `\\\\c{${e}}`;\r\n    default:\r\n      return `\\\\${chr}{${e}}`;\r\n  }\r\n}\r\n\r\nexport function parseBox(box: XmlNode): string {\r\n  const e = parseOMath(box['m:e']);\r\n  return `\\\\boxed{${e}}`;\r\n}\r\n\r\ninterface OMathItem {\r\n  key: string;\r\n  value: any;\r\n}\r\n\r\nexport function parseOMath(oMath: any): string {\r\n  if (!oMath) return '';\r\n\r\n  if (Array.isArray(oMath)) {\r\n    return oMath.map(item => parseOMath(item)).join('');\r\n  }\r\n\r\n  if (typeof oMath === 'string') {\r\n    return oMath;\r\n  }\r\n\r\n  if (typeof oMath !== 'object') {\r\n    return String(oMath);\r\n  }\r\n\r\n  const oMathList: OMathItem[] = [];\r\n  const keys = Object.keys(oMath);\r\n  \r\n  for (const key of keys) {\r\n    if (Array.isArray(oMath[key])) {\r\n      oMathList.push(...oMath[key].map((item: any) => ({ key, value: item })));\r\n    } else {\r\n      oMathList.push({ key, value: oMath[key] });\r\n    }\r\n  }\r\n\r\n  oMathList.sort((a, b) => {\r\n    let oA = 0;\r\n    if (a.key === 'm:r' && a.value?.['a:rPr']?.['attrs']?.['order']) {\r\n      oA = parseInt(a.value['a:rPr']['attrs']['order']);\r\n    } else if (a.value?.[`${a.key}Pr`]?.['m:ctrlPr']?.['a:rPr']?.['attrs']?.['order']) {\r\n      oA = parseInt(a.value[`${a.key}Pr`]['m:ctrlPr']['a:rPr']['attrs']['order']);\r\n    }\r\n    \r\n    let oB = 0;\r\n    if (b.key === 'm:r' && b.value?.['a:rPr']?.['attrs']?.['order']) {\r\n      oB = parseInt(b.value['a:rPr']['attrs']['order']);\r\n    } else if (b.value?.[`${b.key}Pr`]?.['m:ctrlPr']?.['a:rPr']?.['attrs']?.['order']) {\r\n      oB = parseInt(b.value[`${b.key}Pr`]['m:ctrlPr']['a:rPr']['attrs']['order']);\r\n    }\r\n    \r\n    return oA - oB;\r\n  });\r\n\r\n  return oMathList.map(({ key, value }) => {\r\n    switch (key) {\r\n      case 'm:f': return parseFraction(value);\r\n      case 'm:sSup': return parseSuperscript(value);\r\n      case 'm:sSub': return parseSubscript(value);\r\n      case 'm:rad': return parseRadical(value);\r\n      case 'm:nary': return parseNary(value);\r\n      case 'm:limLow': return parseLimit(value, 'low');\r\n      case 'm:limUpp': return parseLimit(value, 'upp');\r\n      case 'm:d': return parseDelimiter(value);\r\n      case 'm:func': return parseFunction(value);\r\n      case 'm:groupChr': return parseGroupChr(value);\r\n      case 'm:eqArr': return parseEqArr(value);\r\n      case 'm:bar': return parseBar(value);\r\n      case 'm:acc': return parseAccent(value);\r\n      case 'm:borderBox': return parseBox(value);\r\n      case 'm:m': return parseMatrix(value);\r\n      case 'm:r': return parseOMath(value);\r\n      case 'm:t': return value;\r\n      default: return '';\r\n    }\r\n  }).join('');\r\n}\r\n\r\nexport function latexFormart(latex: string): string {\r\n  return latex\r\n    .replaceAll(/&lt;/g, '<')\r\n    .replaceAll(/&gt;/g, '>')\r\n    .replaceAll(/&amp;/g, '&')\r\n    .replaceAll(/&apos;/g, \"'\")\r\n    .replaceAll(/&quot;/g, '\"');\r\n}"]}